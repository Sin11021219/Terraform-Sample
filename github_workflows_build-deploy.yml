//Github Acions のワークフローの作成
.github/workflows/build-deploy.yamlを作成
$ mkdir .github && mkdir  .github/workflows && touch  .github/workflows/build-deploy.yml


name: "Build and Deploy"


on: 
   push:
     brantces:
       -main
 
 env:
   OIDC_ARN: arn:aws:iam::XXXXXXXXXXXX:role/GitHubAtionsOIDC
   ECR_REGISTRY: XXXXXXXXXXXX.dkr.ecr.ap-northeast-1.amazonaws.com
   ECR_REPOSITORY: go-simple-server
   APP: go-simple-server

 permissions:
   id-token: write
   contents: read

 jobs:
   build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      -name: Checkout
       uses: actions/checkout@v3

      -name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2

      -uses: actions/cache@v2
      with:
          path: /tmp/.buildx-cache
          key: $ {{runner.os}}-buildx-${{github.sha}}
          restote-keys: |
            ${{ runner.os}}-buildx-     
      
      -name: Assume Role
       uses: aws-action/Configure-aws-credentials@v1-node16
       with:
            role-to-assume: ${{ env.OIDC_ARN }}
            aws-region: ap-northeast-1

      -name: Login to ECR
       uses: docker/login-acion@v1
       with:
            registry: $ {{ env.ECR_REGISTRY }}

      -name: Build and push
       uses: docker/login-acion@v3
       wiith: 
          push:true
          tag: |
           ${{ env.ECR_REGISTRY }}/${{ env.ECR_REGISTRY }}
       cache-from: type = local, src = /tmp/.buildx-cache
         cache-to: type = local, dest = /tmp/.buildx-cache = new, mode = max

      -name: Move cache
         run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      -name: Fill in the new image ID in the amazon ECS task definitions
         id: task-def
         uses: aws-actions/amazon-ecs-render-task-definition@v1
         with: 
           task-definitions: ./aws/task-definition-json
           container-name: ${{ env.APP }}
           image: $ {{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITRY }}:${{ github.sha }}

      -name: Deploy Amazon ECS task definitions
       uses: aws-actions/amazon-ecs-deploy-task-definition@v1
       with:
            task-definition: $ {{ steps.task-def.outputs.task-definition }}
                    service: $ {{ env.APP }}
                    cluster: $ {{ env.APP }}
                    wait-for-service-stability: true


//GitHubにPush
$ git add. && git commit -m "build CI/CD pipeline with GitHub Actions" 
$ git push origin main 

//復習2回目
//タスク定義をデプロイするためのGithub Actionsワークフロー
$ mkdir .github  && mkdir .github/workflows && touch .github/workflows/build-deploy.yml

name "Build and Deploy"
 on:
  push:
   branches:
    -main

env:
  OIDC_ARN    : arn:aws:iam::XXXXXXXXXXXX:role/GitHubActionsOIDC
  ECR_REGISTRY: XXXXXXXXXXXX.dkr.ecr.ap-northeast-1.amazonaws.com
  ECR_REPOSITORY: go-simple-server
  APP          : go-simple-server

permissions:
 id-token: write
 contents: read

jobs: 
 build-and-deploy:
  runs-on: ubuntu-latest
  steps:
   -name: checkout
   uses: actions/checkout@v3

   -name: Set up Docker Buildx
  uses: docker/setup-buildx-action@v2

  -uses: actions/cache@v2
   with:
    path: /tmp/.buildx-cache
    key: ${{ runner.os }}-buildx-${{ github.sha }}
    restore-keys: | ${{ runner.os }}-buildx-

  -name: Assume Role
   uses: aws-actions/configure-aws-credentials@v1-node16
   with: 
    role-to-assume: $ {{ env.OIDC_ARN }}
    aws-region: ap-northeast-1

  -name: Login to ECR
  uses: docker/login-action@v1
  with:
   registry: $ {{ env.ECR_REGISTRY }}

   -name: Build and push
   uses: docker/build-push-action@v3
   with:
    push: true
    tags:  | $ [{ env.ECR_REGISTRY}]/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
    cache-from: type = local, src = /tmp/.buildx-cache
    cache-to: type = local,   dest = /tmp/.buildx-cache-new, mode = max

  -name: Move cache
   run:  |
     rm -rm /tmp/.bildx-cache
     mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  -name: Fill in the new image ID in the Amazon ECS task definition
   id: task-def
   uses: aws-actions/amazon-ecs-render-task-definition@v1
   with:
        task-definition: ./aws/task-definition.json
        container-name: $ {{ env.APP }}
        image: $ {{ env.ECR_REGISTRY }}/${{ env.RCE_REPOSITORY }}:${{ github.sha }}
  
  -name: Deploy Amazon ECS task definition 
   uses: aws-actions/amazon-ecs-deploy-task-definition@v1 
   with: 
        task-definition: $ {{ steps.task-def.outputs.task-definition }}
        service: $ {{ env.APP }}
        cluster: $ {{ env.APP }}
        wait-gor-service-stability: true


//GitHuibにコードをプッシュしてデプロイ
$ git add . && git commit -m "build CI/CD pipeline with GitHub Actions"
$ git push origin main


//復習3回目
//GitHubActionsのワークフローの作成
.github/workflows/terraform.ymlの作成
$ mkdir .github && mkdir .github/workflows && touch .github/workflows/terraform.yml

name: "Build and Deploy"

on:
  push:
    branches:
      -main

env:
  OIDC_ARN: arn:aws:iam::XXXXXXXXXXX:role/GitHubActionsOIDC
  ECR_REGISTRY: XXXXXXXXXXXX.dkr.ecr.ap-northeast-1.amozonaws.com
  ECR_REPOSITORY: go-simple-server
  APP: go-simple-server
  
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      -name: Checkout
      uses: actions/checkout@v3

      -name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

      -uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
         ${{ runner.os }}-buildx
      
      -name: Assume Role
       uses: aws-actions/configure-aws-credentials@v1-node16
       with:
         role-to-assume: ${{ env.OIDC_ARN }}
         aws-region: ap-northeast-1

      -name: Login to ECR
      uses: docker/login-action@v1
      with:
         registry: ${{ env.ECR_REGISTRY }}
      
      -name: Build and push
      uses:  docker/build-push-action@v3
      with:
        push: true
        tags: |
        ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        cache-from: type=local, src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new, mode=max

      -name: Move cache
      run: |
       rm -rf /tmp/.buildx-cache
       mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      -name: Fil in the new image ID in the Amazon ECS task definition
      id: task-def
      with:
        task-definiiton: .aws/task-definiiton.json
        container-name: ${{ env.APP }}
        image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      -name: Deploy Amazon ECS task definition 
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
         task-definition: ${{ steps.task-def.outputs.task-definition }}
         service: ${{ env.APP }}
         cluster: ${{ env.APP }}
         wait-for-service-stability: true

